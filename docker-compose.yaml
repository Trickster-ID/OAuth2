version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: FNL8qs3HuldRRl9P6YINySzQHp1EfxJr
      POSTGRES_DB: oauth_2
    ports:
      - "5432:5432"
    volumes:
      #- postgres_data:/var/lib/postgresql/data
      - ./misc/init.sql:/docker-entrypoint-initdb.d/init.sql
  redis:
    image: redis:7.4-alpine
    container_name: redis
    command: ["redis-server", "--requirepass", "AznRnqks3S1Ne5ZKZBrnLhFVLoqQMCOG"]
    environment:
      REDIS_PASSWORD: AznRnqks3S1Ne5ZKZBrnLhFVLoqQMCOG
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: FsyyxSX6exPHVwpQwhtraLyJbYhIfVEB
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      #- /docker-entrypoint-initdb.d/*.js
  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    ports:
      - 2181:2181
  kafka:
    image: confluentinc/cp-kafka
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zookeeper
  redpanda:
    image: docker.redpanda.com/redpandadata/console:latest
    restart: "no"
    ports:
      - "9000:8080"
    environment:
      KAFKA_BROKERS: "host.docker.internal:29092"
    depends_on:
      - kafka
volumes:
  postgres_data:
  redis_data:
  mongo_data:
  data: